
//Author: Prem Kumar Palanichamy

//Jenkins Pipeline to handle the Continuous Integration and Continuous Deployment on Okteto.
//Prerequisites: you should install the Custom tools plugin on Jenkins, ... 
//...get the okteto CLI and Kubectl. You also need to get your Okteto Token and save it on a Jenkins Credential

pipeline {

        agent any
        
        environment {
            GIT_PROJECT = 'https://github.com/devopshubproject/okteto-jenkins.git'
            DOCKER_FILE = '${env.WORKSPACE}'
            GIT_REPO_NAME = 'okteto-jenkins'
            CONTAINER_IMAGE = 'premkumarpalanichamy/httpd-okteto-jenkins'
            BUILD_TAG = 'latest'
        }

        stages {    
            
            stage('Prepare Environment with Okteto') {
                steps {
                    withCredentials([string(credentialsId: 'okteto-token', variable: 'SECRET')]) {
                        cleanWs ()
                        sh '''
                        okteto login --token ${SECRET}
                        '''
                    }
                }
            }

            stage ('Download the source code from GitHub') {
                steps {
                        sh '''
                        git clone "${GIT_PROJECT}"
                        '''
                }
            }
                
            stage ('Build and Push Image with Okteto') {
                steps {
                    withCredentials([string(credentialsId: 'okteto-token', variable: 'SECRET')]) {
                        sh '''
                        okteto login --token ${SECRET} /
                        cd "${DOCKER_FILE}/${GIT_REPO_NAME}/httpd"
                        okteto build -t ${CONTAINER_IMAGE}:${BUILD_TAG} .
                        '''
                    }    
                }
            }
            
            stage('Deploy Nginx to okteto') {
                steps {
                    withCredentials([string(credentialsId: 'okteto-token', variable: 'SECRET')]) {
                        def output = sh returnStdout: true, script: '''
                        ${OKTETO_DIR}/okteto login --token ${SECRET}
                        cd ${HOME}/nginx-k8s
                        ${OKTETO_DIR}/okteto namespace
                        ${KUBECTL_DIR}/kubectl apply -f nginx-deploy.yaml
                        ${KUBECTL_DIR}/kubectl rollout status deployment.apps/nginx
                        '''
                        println output
                    }
                }
            } */
        }
    }
}